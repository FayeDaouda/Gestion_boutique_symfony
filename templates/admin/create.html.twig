{# templates/admin/create.html.twig #}
{% extends 'base.html.twig' %}

{% block body %}
    <h1>Liste des articles</h1>

    <!-- Bouton pour ouvrir le modal -->
    <button onclick="openModal()" class="bg-green-500 text-white px-4 py-2 rounded">
        Ajouter un article
    </button>

    <!-- Modale -->
    <div id="modal" class="hidden fixed top-0 left-0 w-full h-full bg-gray-800 bg-opacity-50 flex justify-center items-center">
        <div class="bg-white p-6 rounded-lg shadow-md w-96">
            <h2 class="text-lg font-bold mb-4">Ajouter un nouvel article</h2>
            <form id="articleForm" method="post" action="{{ path('admin_article_create') }}">
                {{ form_start(form, { attr: { id: 'articleForm' } }) }}
                    {{ form_widget(form) }}
                    <button type="submit" class="bg-blue-500 text-white px-4 py-2 rounded">
                        Ajouter
                    </button>
                    <button type="button" onclick="closeModal()" class="bg-gray-500 text-white px-4 py-2 rounded">
                        Annuler
                    </button>
                {{ form_end(form) }}
            </form>
        </div>
    </div>

    <!-- Scripts pour gérer le modal -->
    <script>
        function openModal() {
            document.getElementById('modal').classList.remove('hidden');
        }

        function closeModal() {
            document.getElementById('modal').classList.add('hidden');
        }

        // Gestion de l'envoi via Ajax
        document.getElementById('articleForm').addEventListener('submit', function (event) {
            event.preventDefault(); // Empêche l'envoi classique du formulaire

            const form = event.target;
            const formData = new FormData(form);

            fetch(form.action, {
                method: 'POST',
                body: formData,
                headers: {
                    'X-Requested-With': 'XMLHttpRequest',
                },
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert(data.message); // Afficher un message de succès
                        closeModal(); // Fermer le modal
                        window.location.reload(); // Recharger la page pour afficher l'article
                    } else {
                        alert(data.message); // Afficher les erreurs
                        console.log(data.errors);
                    }
                })
                .catch(error => console.error('Erreur:', error));
        });
    </script>
{% endblock %}
